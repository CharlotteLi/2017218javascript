1.检查node是否安装成功
    - node -v
    - node --version  用来检测node的版本；node4.x以上的都是新版node，他们都支持es6;
2. 前端工程师：让js在浏览器运行;
后台工程师：node让js在服务器运行;
3. node常用模块
- http：创建一个服务器；
- fs：file System
    - 读取文件：fs.readFile(文件路径,function(err,data){});
    - 注意：
        1. nodejs不会自动根据路由的不同，渲染不同的内容，他需要我们自己去判断路径的不同，来手动返回不同的内容；
        2. 如果不想反复重启服务器，而又想输入不同内容，渲染不同页面的画，可以使用读取文件和处理路径的方式来解决；
- fs.readdir(path,function(err,files){}) //读取当前文件夹下的所有文件和目录；
- fs.stat(path,function(err,stats){})
    - stats.isFile() 判断是否为文件；
    - stats.isDirectory() 判断是否为文件夹；
4. 常用的一些简单的命令：
- ls:列出当前文件夹下所有的文件和文件夹；
- ctrl+c：阻断当前程序的运行；
- mkdir 创建文件夹
- touch 创建文件
5. 要在node运行js;
- node xxx.js  必须在当前目录下
- 右键 run xxx.js  (stop and run相当于重启服务器)；
6. 前台发往后台的数据请求
- form: action  method submit name  value
- ajax:{url:'xxx',type:'',dataType:'json',data:'',fnLoading:fn,fnComplete:fn,success:fn(data){},error:function(){},timeout:300};
- jsonp:三步走 1）创建一个有名字的全局函数 2）通过script发送请求 3）在函数中接收别人调用全局函数传来的数据；
7. 后台不在乎前端用什么来请求数据，后台在乎的是前端的请求方式method;
常见的请求方式：get  post
8.总结get数据的获取；
    - get通过浏览器的地址栏来传输数据；
    - 接收get参数的方式有三种：
        1）纯手工开发-切 切 切
        2）querystring.parse('k1=v1&k2=v2') => 对象
        3）url.parse(req.url,true).query => 对象
10. url模块
url.parse(req.url)   为了解决query字符串的问题，url.parse(req.url,true)
```
Url {
  protocol: null,  //http协议
  slashes: null,   //斜杠
  auth: null,
  host: null,   //主机
  port: null,    //端口号
  hostname: null, //主机名
  hash: null,  //哈希值；
  search: '?user=ymy&pass=123123',
  query: 'user=ymy&pass=123123', //前端传给后台的参数；😊
  pathname: '/index.html',  //当前文件的根路径 😊
  path: '/index.html?user=ymy&pass=123123',
  href: '/index.html?user=ymy&pass=123123' }
```























